                           Using of voltron
                           ================

Author: Olexandr Sydorchuk <olexandr_syd [at] users.sourceforge.net>
Date: 2010-03-02 22:41:52 UTC


Table of Contents
=================
1 Overview 
2 Creating chat menu 
    2.1 Customising 
    2.2 `bind_keys' 
    2.3 `chatmenu_teama' 
    2.4 `chatmenu_teamb' 
    2.5 `chatmenu_spect' 
    2.6 `chatmenu_install' 
    2.7 `binds_teama_install' 
    2.8 `binds_teamb_install' 
    2.9 `binds_spect_install' 
    2.10 Template for menu 
    2.11 `backspace_cmd' 
    2.12 `fileSplitSize' 
    2.13 bind 
    2.14 postInstall 
    2.15 `messages-from-file' 


1 Overview 
~~~~~~~~~~~

  Voltron is generator of chatmenu for different HUDs of several games
  (primary for tremulous and [Volt  HUD] [1]). Also allow you add own
  binds into config file, create message list.


  [Volt  HUD]: http://tremulous.net/forum/index.php?topic=8699.0

2 Creating chat menu 
~~~~~~~~~~~~~~~~~~~~~
  Configure file is  [tcl] source file. But don't  worry, you don't need
  to learn this language for creating your menus.  Below is example of
  simple menu:

   1:  set snd_menuoff sound/misc/menu3
   2:  set snd_menuon  sound/misc/menu1.wav
   3:  
   4:  set 1. {
   5:      {}                  {play $snd_menuon}
   6:      {Evolve "Evolve to:"} {} (ref:ali1)
   7:      {Buy "Buy:"} {}
   8:      {} {}
   9:  }
  10:  set 1.1. {  
  11:      ""                  {play $snd_menuoff}
  12:      "Dretch"            {class level0}
  13:      "Construction Kit"  {sell weapons;sell upgrades;buy ackit; buy ckit;itemact ackit;itemact ckit}
  14:  }
  15:  set 1.2. {
  16:      ""                  {play $snd_menuoff}
  17:      Basilisk            {class level1}
  18:      Rifle               {sell weapons;sell weapons;buy rifle;itemact rifle}
  19:  }


  It create next menus for different teams:

  menu | team A (aliens) | team B (humans)     | Spectator  
 ------+-----------------+---------------------+-----------
  root | Sub Menus:      | Sub Menus:          |            
       | 1. Evolve       | 1. Buy              |            
 ------+-----------------+---------------------+-----------
  1    | Evolve to:      | Buy:                |            
       | 1. Dretch       | 1. Construction Kit |            
       | 2. Basilisk     | 2. rifle            |            

  Full syntax of menu is: 
  set X. {
      {MenuTextForAll MenuHeaderForAll}  CommandForAll   
      {MenuAlienText MenuHeaderForAlien} AlienCommands
      {MenuHumText MenuHeaderForHuman}   HumCommands
      {MenuSpecText MenuHeaderForSpec}   SpectatorCommands
  }
  
  set X.Y. {
      MenuTextForAll     CommandForAll
      MenuAlienText      AlienCommands
      MenuHumText        HumCommands
      MenuSpecText       SpectatorCommands
  }

  
  Here  is  list  of 4  pairs:  `all',  `team  a' (aliens),  `team  b'
  (humans), `spectator'.  First element of  pair is name of menu item,
  second  - command  for it.   If its  a root  menu item  than first
  element  is pair  of name  of  menu item  and header  name of  child
  submenu. Values of pair `all' is joined to other pairs.

  You can take different menu action for different teams, but you need
  to load  that config files in  some way. Voltron  generate 4 install
  files:
  
 - `chatmenu_install.cfg'  - it contain  merged action for  all teams.
   You can load him if you  have no conflict commands. For example you
   have no several  "say" command for different teams  (i.e. you setup
   only `CommandForAll').
 - `chatmenu_alien_install.cfg' - aliens specified commands;
 - `chatmenu_human_install.cfg' - humans specified commands;  
 - `chatmenu_spect_install.cfg' - spectate specified commands;

  You may need load him when you _join_ to team. For example by adding in your menu or using [bind] command:

  set snd_menuoff sound/misc/menu3
  set snd_menuon  sound/misc/menu1.wav
  # menu example
  set 0. {{Join "Join:"}                  {play $snd_menuon} }
  set 0.1. {"Load alien's binds"          {team aliens;exec ui/hud/common/chatmenu_alien_install.cfg;play $snd_menuoff}}
  set 0.2. {"Load human's binds"          {team humans;exec ui/hud/common/chatmenu_human_install.cfg;play $snd_menuoff}}
  set 0.3. {"Load spectate binds"         {team spectate;exec ui/hud/common/chatmenu_spect_install.cfg;play $snd_menuoff}}
  set 0.6. {"Joint alien"                 {team aliens;exec ui/hud/common/chatmenu_alien_install.cfg;play $snd_menuoff}}
  set 0.7. {"Joint human"                 {team humans;exec ui/hud/common/chatmenu_human_install.cfg;play $snd_menuoff}}
  set 0.8. {"Joint spectate"              {team spectate;exec ui/hud/common/chatmenu_spect_install.cfg;play $snd_menuoff}}
  # bind example
  bind F9 "exec ui/hud/common/chatmenu_spect_install.cfg"



  [tcl]: http://www.tcl.tk
  [bind]: sec-2.13

2.1 Customising 
================
   You can use several variables and commands  for configuring

2.2 `bind_keys' 
================
   Keys for menu, default is {1 2 3 4 5 6 7 8 9 0 - =}.

2.3 `chatmenu_teama' 
=====================
   Chat menu output file name  for team A.  Default is "`chatmenu_alien.cfg'".

2.4 `chatmenu_teamb' 
=====================
   Chat menu output file name for team B.  Default is "`chatmenu_alien.cfg'".

2.5 `chatmenu_spect' 
=====================
   Chat menu output file name for spectator. Default is "`chatmenu_alien.cfg'".

2.6 `chatmenu_install' 
=======================
   Main chat menu install script that contain all merged binds for all
   teams.  Default is "`chatmenu_install.cfg'".

2.7 `binds_teama_install' 
==========================
   Script   file  for   binds   of  team   A   (aliens).  Default   is
   "`chatmenu_alien_install.cfg'".

2.8 `binds_teamb_install' 
==========================
   Script   file  for   binds   of  team   B   (humans).  Default   is
   "`chatmenu_human_install.cfg'")

2.9 `binds_spect_install' 
==========================
   Script    file    for    binds    of    spectator.    Default    is
   "`chatmenu_spect_install.cfg'")

2.10 Template for menu 
=======================
   You may set menu template different for all teams:
   - `menu_alien_tmpl';
   - `menu_human_tmpl';
   - `menu_spectator_tmpl'.

   Default is:

  set menu_spectator_tmpl "    rect 6 210 400 190
      visible 1
      decoration
      forecolor 45 45 45 1
      textscale 0.25
      autowrapped
      textstyle ITEM_TEXTSTYLE_SHADOWED
      cvartest cg_chatmenu"


2.11 `backspace_cmd' 
=====================
   additional command  for BACKSPACE key (primary command  is set root
   menu).  Default "`play sound/misc/menu4.wav'"

2.12 `fileSplitSize' 
=====================
   Max file size before split. Quake  have limits for cfg file size in
   16k.   To prevent  fail load  file will  be split  and  used `exec'
   command.

2.13 bind 
==========
  `bind' add additional key bind  at end of install script, it similar
  to quake bind.

2.14 postInstall 
=================
   Text of install script that be at and. Default is volt's binds like
   sound control etc. You can easy add some stuff:
  set postInstall "$postInstall
  // some addition stuf
  unbind v
  exec foobaar.cfg"

 

2.15 `messages-from-file' 
==========================
   Create  messages  list  that  allow  you cyclic  run  some  command
   (default is "say" command).  Format of command:

   `messages-from-file variable_name file_source file_dest execpath {prefix {}} {sufix {}} {command {"say"}}'

   -  `variable_name'  is  quake  var  that  you  can  use  by  "`vstr
     variable_name'" (good to bind some key to it);
   - `file_source' - source file of lines;
   - `file_dest' - generated configfile location;
   - `execpath' - quakebased path to file;

   For example you wish to say different "hello". You have file `hello.txt':

  # comment is line that start with #
  Hi
  Hello
  Hola


  In your config you can add:

  messages-from-file Hello \
      "hello.txt"\
      "~/.tremulous/base/ui/hud/common/msg/hello.cfg" \
      ui/hud/common/msg/alienjoin.cfg \
      \o/(  ) say
  # bind it to menu 9.9
  set 9. {{Messages "Messages:"}  {play sound/misc/menu1.wav} }
  set 9.9. { {} {}
      "Hello"  "vstr Hello"
  }




[1] It configured by  default for  creating `chatmenu_install.cfg'
which is  a part of volts's  chatmenu, who is initial  creator of this
chat menu i don't know, but you can inform me :).

